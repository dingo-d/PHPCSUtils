name: Test

on:
  # Run on pushes to `master` and on all pull requests.
  push:
#    branches:
#      - master
#      - develop
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  #### TEST STAGE ####
  test:
    if: ${{ github.ref != 'refs/heads/develop' }}
    runs-on: ubuntu-latest

    strategy:
      # Keys:
      # - risky: Whether to run with tests which check for being in sync with PHPCS.
      # - experimental: Whether the build is "allowed to fail".
      matrix:
        # The GHA matrix works different from Travis.
        # You can define jobs here and then augment them with extra variables in `include`,
        # as well as add extra jobs in `include`.
        # @link https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix
        #
        # IMPORTANT: test runs shouldn't fail because of PHPCS being incompatible with a PHP version.
        # - PHPCS will run without errors on PHP 5.4 - 7.2 on any version.
        # - PHP 7.3 needs PHPCS 2.9.2 and 3.3.1+ to run without errors.
        #   On PHPCS 2.x our tests won't fail though, but on PHPCS 3.x < 3.3.1 they will.
        # - PHP 7.4 needs PHPCS 3.5.0+ to run without errors.
        #   On PHPCS 2.x our tests won't fail though, but on PHPCS 3.x < 3.5.0 they will.
        # - PHP 8.0 needs PHPCS 3.5.7+ to run without errors.
        #
        # The matrix is set up so as not to duplicate the builds which are run for code coverage.

        include:
          - php: '8.0'
            phpcs_version: 'dev-master'
            risky: false
            experimental: false

          # Current lowest PHPCS version which _may_ run on PHP 8 is 3.5.0, so don't even try
          # to test against older versions.
          - php: '8.1'
            phpcs_version: 'dev-master'
            risky: false
            experimental: true

    name: "Test${{ matrix.phpcs_version == 'dev-master' && matrix.risky == false && ' + Lint' || '' }}: PHP ${{ matrix.php }} - PHPCS ${{ matrix.phpcs_version }}${{ matrix.risky == true && ' (risky)' || '' }}"

    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # On stable PHPCS versions, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          if [[ "${{ matrix.phpcs_version }}" != "dev-master" && "${{ matrix.phpcs_version }}" != "4.0.x-dev" ]]; then
            echo '::set-output name=PHP_INI::error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On'
          else
            echo '::set-output name=PHP_INI::error_reporting=E_ALL, display_errors=On'
          fi

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none

      - name: 'Composer: set PHPCS version for tests'
        run: composer require --no-update squizlabs/php_codesniffer:"${{ matrix.phpcs_version }}"

      - name: 'Composer: conditionally tweak PHPUnit version'
        if: ${{ startsWith( matrix.php, '8' ) }}
        # Temporary fix - PHPUnit 9.3+ is buggy when used for code coverage, so not allowed "normally".
        # For tests which don't run code coverage, we can safely install it for PHP 8 though.
        run: composer require --no-update phpunit/phpunit:"^9.3"

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - normal
        if: ${{ matrix.php < 8.1 }}
        uses: "ramsey/composer-install@v1"

      # For the PHP "nightly", we need to install with ignore platform reqs as not all dependencies allow it yet.
      - name: Install Composer dependencies - with ignore platform
        if: ${{ matrix.php >= 8.1 }}
        uses: "ramsey/composer-install@v1"
        with:
          composer-options: --ignore-platform-reqs

      - name: Lint against parse errors
        if: matrix.phpcs_version == 'dev-master' && matrix.risky == false
        run: composer lint

      - name: Run the unit tests (non-risky)
        if: matrix.risky == false
        run: vendor/bin/phpunit --no-coverage

      - name: Run the unit tests (risky)
        if: ${{ matrix.risky }}
        # "nothing" is excluded to force PHPUnit to ignore the <exclude> settings in phpunit.xml.dist.
        run: vendor/bin/phpunit --no-coverage --group compareWithPHPCS --exclude-group nothing
